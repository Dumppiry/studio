import {
  FiEdit,
  FiSettings,
  FiBookmark,
  FiAlignRight,
  FiPenTool,
  FiFileText,
  FiCalendar,
  FiMessageSquare,
  FiGift,
  FiTruck,
  FiUser
} from 'react-icons/fi'
import { FaRegHandshake } from 'react-icons/fa'

import EventSubmissionsPreview from '../components/EventRegistrationSubmissionsPreview'

export default (S) =>
  S.list()
    .title('Content')
    .items([
      S.listItem()
        .title('Settings')
        .icon(FiSettings)
        .child(S.editor().schemaType('settings').documentId('settings')),
      S.listItem()
        .title('Event Settings')
        .icon(FiSettings)
        .child(
          S.editor().schemaType('eventSettings').documentId('eventSettings')
        ),
      S.listItem()
        .title('Main Navigation')
        .icon(FiAlignRight)
        .child(
          S.editor().schemaType('mainNavigation').documentId('mainNavigation')
        ),
      S.listItem()
        .title('Full Navigation')
        .icon(FiAlignRight)
        .child(
          S.editor().schemaType('fullNavigation').documentId('fullNavigation')
        ),
      S.divider(),
      S.listItem()
        .title('Pages')
        .icon(FiFileText)
        .child(
          S.list()
            .title('Pages')
            .items([
              S.listItem()
                .title('Front Page')
                .icon(FiFileText)
                .child(
                  S.editor().schemaType('frontPage').documentId('frontPage')
                ),
              S.listItem()
                .title('Events Page')
                .icon(FiCalendar)
                .child(
                  S.editor().schemaType('eventsPage').documentId('eventsPage')
                ),
              S.listItem()
                .title('Benefits page')
                .icon(FiGift)
                .child(
                  S.editor()
                    .schemaType('benefitsPage')
                    .documentId('benefitsPage')
                ),
              S.divider(),
              S.listItem()
                .title('Pages')
                .icon(FiFileText)
                .child(
                  S.documentList()
                    .schemaType('page')
                    .title('Pages')
                    .filter('_type == "page"')
                    .menuItems([...S.documentTypeList('page').getMenuItems()])
                    .defaultOrdering([{ field: 'title.fi', direction: 'asc' }])
                    .child(S.document().schemaType('page'))
                )
            ])
        ),
      S.listItem()
        .title('Events')
        .icon(FiCalendar)
        .child(
          S.list()
            .title('Events')
            .items([
              S.listItem()
                .title('Events')
                .icon(FiCalendar)
                .child(
                  S.documentTypeList('event').child(
                    S.document()
                      .schemaType('event')
                      .views([
                        S.view.form(),
                        S.view
                          .component(EventSubmissionsPreview)
                          .title('Attendees')
                      ])
                  )
                ),
              S.listItem()
                .title('Categories')
                .icon(FiBookmark)
                .child(S.documentTypeList('eventCategory'))
            ])
        ),
      S.listItem()
        .title('Blog')
        .icon(FiEdit)
        .child(
          S.list()
            .title('Blog')
            .items([
              S.listItem()
                .title('Settings')
                .icon(FiSettings)
                .child(
                  S.editor()
                    .schemaType('blogSettings')
                    .documentId('blogSettings')
                ),
              S.listItem()
                .title('Blog page')
                .icon(FiFileText)
                .child(S.editor().schemaType('page').documentId('blogPage')),
              S.listItem()
                .title('Categories')
                .icon(FiBookmark)
                .child(S.documentTypeList('blogCategory')),
              S.listItem()
                .title('Posts')
                .icon(FiEdit)
                .child(S.documentTypeList('blogPost'))
            ])
        ),
      S.listItem()
        .title('Partners')
        .icon(FaRegHandshake)
        .child(S.editor().schemaType('partners').documentId('partners')),
      S.listItem()
        .title('Forms')
        .icon(FiPenTool)
        .child(
          S.list()
            .title('Forms')
            .items([
              S.listItem()
                .title('Contact forms')
                .icon(FiMessageSquare)
                .child(S.documentTypeList('contactForm')),
              S.listItem()
                .title('Registration forms')
                .icon(FiPenTool)
                .child(S.documentTypeList('eventRegistrationForm'))
            ])
        ),
      S.listItem()
        .title('Jobs')
        .icon(FiTruck)
        .child(
          S.list()
            .title('Jobs')
            .items([
              S.listItem()
                .title('Jobs')
                .icon(FiTruck)
                .child(S.documentTypeList('job')),
              S.listItem()
                .title('Categories')
                .icon(FiBookmark)
                .child(S.documentTypeList('jobCategory')),
              S.listItem()
                .title('Types')
                .icon(FiBookmark)
                .child(S.documentTypeList('jobType'))
            ])
        ),
      S.listItem()
        .title('Benefits')
        .icon(FiGift)
        .child(
          S.list()
            .title('Benefits')
            .items([
              S.listItem()
                .title('Benefits')
                .icon(FiGift)
                .child(S.documentTypeList('benefit')),
              S.listItem()
                .title('Categories')
                .icon(FiBookmark)
                .child(S.documentTypeList('benefitCategory'))
            ])
        ),
      S.listItem()
        .title('People')
        .icon(FiUser)
        .child(S.documentTypeList('person')),
      ...S.documentTypeListItems().filter(
        (listItem) =>
          ![
            'settings',
            'eventSettings',
            'mainNavigation',
            'fullNavigation',
            'page',
            'frontPage',
            'eventsPage',
            'event',
            'eventCategory',
            'blogSettings',
            'blogPost',
            'blogCategory',
            'partners',
            'benefitsPage',
            'job',
            'jobCategory',
            'jobType',
            'contactForm',
            'eventRegistrationForm',
            'benefit',
            'benefitCategory',
            'person'
          ].includes(listItem.getId())
      )
    ])
